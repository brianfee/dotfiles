#!/bin/sh

help_message() {
	echo "Options:"
	echo "  -h  Display this help message"
	echo "  -l  Lock the screen"
	echo "  -r  Set a random wallpaper from the given directory"
	echo "  -s  Set a new wallpaper and create lockscreen background"
	echo "  -S  Create lockscreen background only"
}

get_dimensions() {
	# Check for xdpyinfo
	if [[ `command -v xdpyinfo` == "" ]]; then
		if [[ "$verbosity" -eq 1 ]]; then echo "xdpyinfo is not installed. Wallpaper will be sized to 1920x1080"; fi
		echo 1920x1080
	else
		screen=`xdpyinfo | awk '/dimensions:/ { print $2; exit }'`
		echo $screen
	fi
}

create_wallpaper() {
	# Create cache folder if it doesn't exist
	[ -d $HOME/.cache/blurlock ] || mkdir -p $HOME/.cache/blurlock
	WALLPAPER=$HOME/.cache/blurlock/wallpaper.png
	convert $1 -resize 1440x900^ -blur 0x2 \
		-fill '#20202099' \
		-draw 'rectangle 0,765,275,830' \
		$WALLPAPER
}

lock() {
	background=cccccc10
	foreground=ccccccff
	accent=0b76deff
	warning=e25147ff
	i3lock \
		-t \
		-i "$HOME/.cache/blurlock/wallpaper.png" \
		--force-clock \
		--timepos="x+100:h-100" \
		--timestr="%H:%M %Z" \
		--timecolor=$foreground \
		--datepos="tx:ty+20" \
		--datecolor=$foreground \
		--indpos="x+240:h-103" \
		--radius=20 --ring-width=3 \
		--line-uses-inside \
		--keyhlcolor=$accent \
		--bshlcolor=$warning \
		--separatorcolor=$background \
		--ringcolor=$foreground \
		--insidecolor=$background \
		--veriftext="" \
		--ringvercolor=$accent \
		--insidevercolor=$foreground \
		--wrongtext="" \
		--ringwrongcolor=$foreground \
		--insidewrongcolor=$warning \
		--noinputtext="" \
		--indicator
}


# Take command line arguments
while getopts r:s:hlv arg; do
	case "${arg}" in
		r) randomarg=${OPTARG};randombit=1;;
		s) setuparg=${OPTARG};setupbit=1;;
		S) bluronlyarg=${OPTARG};bluronlybit=1;;
		h) helpmessage=1;;
		l) lockscreen=1;;
		v) verbosity=1;;
	esac
done
shift "$(($OPTIND -1))"



if [[ "$verbosity" -eq 1 ]]; then
	echo -n "Screen Dimensions: $((get_dimensions))"
fi

if [[ "$helpmessage" -eq 1 ]]; then
	help_message
	exit
fi

if [[ "$setupbit" -eq 1 ]]; then
	if [[ -f "$setuparg" ]]; then
		feh --bg-scale $setuparg
		create_wallpaper $setuparg
		exit
	fi
else
	echo "$setuparg is not a file"
	exit
fi

case $1 in
-w)
	feh --bg-scale $2
	create_wallpaper $2
	;;
--random)
	case $2 in
	'')
		FILE=`find ~/.wallpapers/ -type f | shuf -n 1`
		feh --bg-scale $FILE
		create_wallpaper $FILE
		;;
	*)
		FILE=`find $2 -type f | shuf -n 1`
		feh --bg-scale $FILE
		create_wallpaper $FILE
		;;
	esac
	;;
*)
	help_message
	;;
esac
